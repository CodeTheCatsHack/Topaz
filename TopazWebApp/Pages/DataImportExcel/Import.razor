@page "/import"
@using static Topaz.Data.Service.ServiceInfoMeasure;
@using static Topaz.Data.ObservableExpression;
@using Scaffold.Model
@inherits Topaz.Data.ImportDataComponent

<div class="sidebar">
    <div class="top-row ps-3 navbar navbar-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="">Действия</a>
            <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
                <span class="navbar-toggler-icon"></span>
            </button>
        </div>
    </div>
    <div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
        <nav class="flex-column">
            @if (Measures.Count != 0)
            {
                <div class="nav-item px-3">
                    <Button @onclick="OnMeasureClick">Информацию по филиалам</Button>
                </div>
                <div class="nav-item px-3">
                    <Button @onclick="OnMeasureInfoClick">Подробная информация по филиалам</Button>
                </div>
                <div class="nav-item px-3">
                    <Button @onclick="OnVoiceConnectionMetricClick">Показатели голосового соединения</Button>
                </div>
                <div class="nav-item px-3">
                    <Button @onclick="OnMessagingMetricClick">Показатели передачи текстовых сообщений</Button>
                </div>
                <div class="nav-item px-3">
                    <Button @onclick="OnHttpTransmittingMetricClick">Показатели по передаче данных(за исключением услуг связи по передаче данных для целей передачи голосовой информации)</Button>
                </div>
                <div class="nav-item px-3">
                    <Button @onclick="OnReferenceInfoMetricClick">Справочная информация</Button>
                </div>
            }
            else
            {
                <div>
                    Нет Данных
                </div>
            }
        </nav>
    </div>
</div>

<h1>Импорт</h1>

<div class="table-wrapper">
    @switch (ViewDataStatus)
    {
        case ViewData.MeasureInfo:
            <DataGrid TItem="MeasureInfo"
                      Data="Measures.Select(x => x.MeasureInfo)"
                      bind-SelectedRow="SelectedMeasureInfo"
                      PageSize="10"
                      TotalItems="@Total"
                      ShowPager="true"
                      Responsive
                      Editable
                      Filterable
                      Sortable
                      FilterMode="DataGridFilterMode.Menu"
                      SortMode="DataGridSortMode.Multiple"
                      UseValidation
                      ShowValidationsSummary="true">
                <DataGridColumn Field="@nameof(MeasureInfo.Protocol)" Caption="Протокол" Editable/>
                <DataGridColumn Field="@nameof(MeasureInfo.CompanyFullname)" Caption="Полное наименование компании" Editable/>
                <DataGridColumn Field="@nameof(MeasureInfo.CompanyAbbr)" Caption="Абривиатура" Editable/>
                <DataGridColumn Field="@nameof(MeasureInfo.CompanyName)" Caption="Название" Editable/>
                <DataGridColumn Field="@nameof(MeasureInfo.CompanyType)" Caption="Федеральное значение" Editable/>
                <DataGridCommandColumn/>
            </DataGrid>
            break;
        case ViewData.Measure:
            <DataGrid TItem="Measure"
                      Data="Measures"
                      bind-SelectedRow="SelectedMeasure"
                      PageSize="10"
                      TotalItems="Total"
                      ShowPager="true"
                      Responsive
                      Editable
                      Filterable
                      Sortable
                      FilterMode="DataGridFilterMode.Menu"
                      SortMode="DataGridSortMode.Multiple"
                      UseValidation
                      ShowValidationsSummary="false">
                <DataGridColumn Field="@nameof(Measure.Place)" Caption="Место контроля" Editable>
                    <EditTemplate>
                        <TextEdit Text="@((string)context.CellValue)" TextChanged="value => context.CellValue = value">
                            <Feedback>
                                <ValidationError/>
                            </Feedback>
                        </TextEdit>
                    </EditTemplate>
                </DataGridColumn>
                <DataGridColumn Field="@nameof(Measure.Equipment)" Caption="Измерительное оборудование" Editable/>
                <DataGridColumn Field="@nameof(Measure.Conditions)" Caption="Условия контроля" Editable/>
                <DataGridColumn Field="@nameof(Measure.StartMeasure)" Caption="Дата начала контроля" Editable/>
                <DataGridColumn Field="@nameof(Measure.EndMeasure)" Caption="Дата конца контроля" Editable/>
                <DataGridCommandColumn/>
            </DataGrid>
            break;
        case ViewData.ReferanceInfo:
            <DataGrid TItem="ReferenceInfoMetric"
                      Data="Measures.CastTo<ReferenceInfoMetric>()"
                      bind-SelectedRow="SelectedReferenceInfoMetric"
                      PageSize="10"
                      TotalItems="@Total"
                      ShowPager="true"
                      Responsive
                      Editable
                      Filterable
                      Sortable
                      FilterMode="DataGridFilterMode.Menu"
                      SortMode="DataGridSortMode.Multiple"
                      UseValidation
                      ShowValidationsSummary="true">
                <DataGridColumn Field="@nameof(ReferenceInfoMetric.TotalConnectionAttempts)" Caption="Общее кол-во соединений HTTP" Editable/>
                <DataGridColumn Field="@nameof(ReferenceInfoMetric.TotalVoiceSequences)" Caption="POLQA" Editable/>
                <DataGridColumn Field="@nameof(ReferenceInfoMetric.TotalMessagesSent)" Caption="Общее кол-во отправленных SMS" Editable/>
                <DataGridColumn Field="@nameof(ReferenceInfoMetric.TotalTestSessions)" Caption="Общее кол-во сессий HTTP (Web-browsing)" Editable/>
                <DataGridColumn Field="@nameof(ReferenceInfoMetric.NegativeMossamplesCount)" Caption="Кол-во соединений с низкой разборчивостью" Editable/>
                <DataGridColumn Field="@nameof(ReferenceInfoMetric.TotalTestVoiceConnections)" Caption="Общее кол-во голосовых соединений" Editable/>
                <DataGridCommandColumn/>
            </DataGrid>
            break;
        case ViewData.MessagingMetrics:

            break;
        case ViewData.HttpTransmittingMetric:

            break;
        case ViewData.VoiceConnectionMetric:

            break;
        default:
            throw new ArgumentOutOfRangeException();
    }

    <div class="filters">
        <Button class="save" @onclick="Save">Сохранить</Button>

        <div class="filters-menu">
            <div class="filter-item file">
                <Field>
                    <FileEdit @ref="fileEdit" Changed="OnChanged" Filter=".xls, .xlsx" Multiple/>
                </Field>

                <button @onclick="UploadFiles">Upload Files</button>
            </div>
        </div>

        <Button class="cancel">Отмена</Button>
    </div>
</div>